plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'au.edu.sydney.soft3202.majorproject'
    mainClass = 'au.edu.sydney.soft3202.majorproject.MainApplication'
}

ext {
    hamcrest = "2.2"
    retrofitVersion = '2.9.0'
    sqliteVersion = '3.36.0.3'
    log4j2Version = '2.17.2'
    okhttpVersion = '2.7.5'
    gsonVersion = '2.9.0'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media']
}

dependencies {
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2Version"
    implementation "org.apache.logging.log4j:log4j-api:$log4j2Version"
    implementation "org.xerial:sqlite-jdbc:$sqliteVersion"
    // Test
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.4.0'
    testImplementation 'org.mockito:mockito-inline:4.4.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation "org.hamcrest:hamcrest:$hamcrest"
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}